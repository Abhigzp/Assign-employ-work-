import React,{useState,useEffect} from 'react';
import axios from 'axios';
import { confirmAlert } from 'react-confirm-alert'; // Import
import 'react-confirm-alert/src/react-confirm-alert.css'; // import Css

import './user.css';

const User = () => {

const [ArrayOfName,setArrayOfName]=useState([]);            //  this  state is for naming 

const [ArrayOfWork,setArrayOfWork]=useState([]);           //  this state is used for worklist data in which list available.

const [userData, setUserData] = useState([]);             // this state is for assign elements .

const [reallist,setRealList] = useState([]);            // this state is storing hold origional value of worklist

const [name, setName]=useState('')

const [newUnassignAdd,setNewUnassignAdd]=useState([]); 
const [NewAssignAdd, setNewAssignAdd] = useState([]);

const [newUnassignRemove,setNewUnassignRemove]=useState([]); 
const [NewAssignRemove, setNewAssignRemove] = useState([]);



const[edit,setEdit]=useState(false)

useEffect(()=>{
    getData()
    getData1()

},[]);


const getData= async()=>{
    let res = await axios.get('http://localhost:3100/get-data');
    if(res){
        setArrayOfName(res.data);
    }
    
  }
  const getData1= async()=>{
    let res = await axios.get('http://localhost:3100/get-datawork');
    if(res){
      setArrayOfWork(res.data);         // work list
        setRealList(res.data);          // using for hold original state 
    }
  }


//         --------------------> this is hole save button 
  const alldata = async(name)=>{
    let res = await axios.get(`http://localhost:3100/user-data/${name}`);
    // console.log(res)
    if(res.data.length!==0){
    

        let array1=reallist;
        setUserData(res?.data[0]?.task);
        
        let  array2 = res?.data[0]?.task ?? [];

        console.log(array2,'1')//assigned array

       
        array1 = array1?.filter(e => !array2?.some(e1 => e1?.work1 === e?.work1))
        
       console.log(array1,'2');//unassigned array
       setArrayOfWork(array1);
       setEdit(true);
       
    }else{
    setEdit(false)
    setUserData([])
    }
  }

  const handleDD=(e)=>{
                       getData1();
                       alldata(e.target.value);
                       setName(e.target.value)  
                     }
 const handleTask=(task,index)=>{

                             let array1=[];
                             let array2 =[];
                             array2=[...userData];
                             array2.push(task);
                                 setNewAssignAdd(array2);
                              for (let i = 0; i < ArrayOfWork.length; i++) {
                            if(i===index){
                                   // unassign.splice(index, 1)
                                     } else{
                                             array1.push(ArrayOfWork[i])
                                           }
                                          }   
                                           setNewUnassignAdd(array1);      
                                          }
      const handleRemove =(task,index)=>{
                  let arr1 = [];
                  let arr2 = [];
                  arr1=[...ArrayOfWork];
                  arr1.push(task);
                  setNewUnassignRemove(arr1);
                  for (let i = 0; i < userData.length; i++) {
                               if(i===index){
                                       // unassign.splice(index, 1)
                                      } else{
                                           arr2.push(userData[i])
                                           }
                                         }
                                       setNewAssignRemove(arr2)
                                      }

// Button add ------------------------------------------------------------------------->>>>>>>>>>>>
//------------------------------------->  single add-----> 

const handleAdd=() => { 
  if(NewAssignAdd.length) {
    setUserData(NewAssignAdd);
    setArrayOfWork(newUnassignAdd);
    NewAssignAdd([])
    newUnassignAdd([])
  } else {
    alert("please select a data from left list ")
  }   
}


 //------------------------------------->  multi add -------->
const multAdd=()=>{
  setUserData(reallist);
  setArrayOfWork([]);
}

//-------------------------------------->  single Remove------------->


const singleRemove = () => { 
  setUserData([]);
  setUserData(NewAssignRemove);
  setArrayOfWork([])
  setArrayOfWork(newUnassignRemove); 
  
  }

//-------------------------------------->    All delete --------->
const  allRemove = ()=>{
     confirmAlert({
            message: 'Are you sure to remove all works',
            buttons: [
                         {
                            label: 'Yes',
                            onClick:() => { 
                                           setUserData([]);
                                           setArrayOfWork(reallist);
                                          }      
                         },
                                 {  label: 'No', }
                     ]
                      }   );
                     }

const saveInToDatabase=async()=>{
let json = {name:name,task:userData};
console.log(json);
if(!edit){
let res = await axios.post('http://localhost:3100/post-data',json);
}else{
let res = await axios.put('http://localhost:3100/update-data',json);
setEdit(false);
}
alert("Your file is being uploaded!")
}

  return (
    <div>
        <div className='mainDiv'><h3> User Report</h3></div><br/>  
          <div className='col'>
              <select  onChange={handleDD} value={name} >
                     <option > Select Name</option>
                          {   ArrayOfName && ArrayOfName.map((userName)=>{
                                   return(
                                          <>
                                          <option value={userName.name}>{userName.name}</option>
                                          </>
                                        )})
                          }
                </select>
          </div> 
          <div className="container">
             <div className="row"> 
             {/*///////////---------------------------- Unassign department---------------///////////////////// */}
                   <div className="col-sm">
                   
                      <div className='unassign'>
                        
                              {  
                              ArrayOfWork.map((item,index)=>{return (
                                        <ul className='list-group'> 
                                        <li className='list-group-item' 
                                             style={{backgroundColor:"", caretColor: "rgba(0,0,0,0)"}}  
                                             onClick={()=>handleTask(item,index)}>{item.work1}</li>
                                        </ul>
                                        ) })     
                                    }
                       </div>
             </div>
               
               {/* //////////////-------------------------button department ----------------////////////////////*/}
               
                 <div className="col-sm">
                    <div className="btn fixed" >
                   
                    <div>
                       <button   type="button" 
                                 className="btn btn-primary btn-sm" 
                                 onClick={() => handleAdd() } >  Single Add </button>
                    </div>
                     <div>
                       <button type="button" 
                               className="btn btn-success btn-sm"
                               onClick={multAdd} >All Add </button>
                    </div>   
                    <div>
                       <button type="button" 
                               className="btn btn-secondary btn-sm"  
                               onClick={singleRemove}> Remove </button>
                    </div>
                    <div>
                       <button type="button" 
                               className="btn btn-danger btn-sm" 
                               onClick={allRemove} > All remove </button>
                    </div>     
               </div>   
              </div>
              {/* /////////////////////////---------------ASSIGN DEPARTMENT ----------------////////////////////// */}
              <div className="col-sm">
                   <div className='assign' >
                              { userData && userData.map((item,index)=>{return (
                                <ul className='list-group'> 
                                  <li className='list-group-item' 
                                      style={{caretColor: "rgba(0,0,0,0)"}} 
                                      onClick={()=>handleRemove(item,index)} > {item.work1}</li>
                                        </ul>  ) })
                              } 
                         </div></div>   
           </div>        
     </div>
    <div className='save'>
             <button type="button"  
                     className="btn btn-success " 
                     onClick={saveInToDatabase}>{edit?'Edit':'Save'}
            </button>
     </div>   
   </div>
  )
}
export default User;